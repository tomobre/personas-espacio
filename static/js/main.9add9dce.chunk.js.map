{"version":3,"sources":["components/Map/iss.svg","components/Map/icon.js","components/Map/Map.js","components/People/People.js","App.js","index.js"],"names":["Icon","L","icon","iconUrl","iconFile","iconRetinaUrl","iconAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","className","Component","styled","div","Map","position","zoom","onViewportChange","center","TileLayer","url","Marker","Popup","lat","lng","Circle","radius","Header","h1","Person","Name","p","People","people","map","person","name","craft","Wrapper","Content","App","state","handleViewportChange","viewport","setState","getSpaceData","a","issLocationPromise","axios","get","peopleInSpacePromise","Promise","all","issLocation","peopleInSpace","data","iss_position","latitude","longitude","console","log","this","intervalId","setInterval","clearInterval","React","ReactDOM","render","document","getElementById"],"mappings":"gVAAe,MAA0B,gCCc1BA,EAXFC,IAAEC,KAAK,CAClBC,QAASC,EACTC,cAAeD,EACfE,WAAY,KACZC,UAAW,KACXC,WAAY,KACZC,aAAc,KACdC,SAAU,CAAC,GAAI,IACfC,UAAW,aCCPC,EAAYC,IAAOC,IAAV,qEAAGD,CAAH,kDA6BAE,EApBH,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAC7B,OACE,cAACN,EAAD,UACE,eAAC,IAAD,CACEO,OAAQH,EACRC,KAAMA,EACNC,iBAAkBA,EAHpB,UAKE,cAACE,EAAA,EAAD,CAAWC,IAAI,uDACf,eAACC,EAAA,EAAD,CAAQN,SAAUA,EAAUd,KAAMF,EAAlC,UACE,eAACuB,EAAA,EAAD,wBACaP,EAASQ,IADtB,IAC2B,uBAD3B,eAC8CR,EAASS,OAEvD,cAACC,EAAA,EAAD,CAAQP,OAAQH,EAAUW,OAAQ,gB,iBC/BtCf,EAAYC,IAAOC,IAAV,oEAAGD,CAAH,sBAITe,EAASf,IAAOgB,GAAV,iEAAGhB,CAAH,2BAINiB,EAASjB,IAAOC,IAAV,iEAAGD,CAAH,wHAQNkB,EAAOlB,IAAOmB,EAAV,+DAAGnB,CAAH,iCAsBKoB,EAjBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,eAAC,EAAD,WACE,cAACN,EAAD,qCACCM,EAAOC,KAAI,SAACC,GACX,OACE,cAACN,EAAD,UACE,eAACC,EAAD,WACE,iCAASK,EAAOC,OADlB,MACoCD,EAAOE,UAFhCF,EAAOC,KAAOD,EAAOE,cCvBtCC,EAAU1B,IAAOC,IAAV,kEAAGD,CAAH,sGAQP2B,EAAU3B,IAAOC,IAAV,kEAAGD,CAAH,oGAoEE4B,E,4MA1DbC,MAAQ,CAAE1B,SAAU,CAAEQ,IAAK,EAAGC,IAAK,GAAKR,KAAM,EAAGiB,OAAQ,I,EAazDS,qBAAuB,SAACC,GAClBA,EAAS3B,OAAS,EAAKyB,MAAMzB,MAC/B,EAAK4B,SAAS,CAAE5B,KAAM2B,EAAS3B,Q,EAGnC6B,a,sBAAe,wCAAAC,EAAA,sEAES,0CACK,yCAEnBC,EAAqBC,IAAMC,IAHb,2CAIdC,EAAuBF,IAAMC,IAHV,0CAHd,SAQgCE,QAAQC,IAAI,CACrDL,EACAG,IAVS,mCAQJG,EARI,KAQSC,EART,KAaLvC,EAAW,CACfQ,IAAK8B,EAAYE,KAAKC,aAAaC,SACnCjC,IAAK6B,EAAYE,KAAKC,aAAaE,WAGrC,EAAKd,SAAS,CAAE7B,SAAUA,EAAUkB,OAAQqB,EAAcC,KAAKtB,SAlBpD,kDAoBX0B,QAAQC,IAAR,MApBW,0D,kEAhBM,IAAD,OAClBC,KAAKhB,eACLgB,KAAKC,WAAaC,aAAY,WAC5B,EAAKlB,iBACJ,O,6CAIHmB,cAAcH,KAAKC,c,+BA+BX,IAAD,EAC4BD,KAAKpB,MAAhC1B,EADD,EACCA,SAAUC,EADX,EACWA,KAAMiB,EADjB,EACiBA,OACxB,OACE,cAACK,EAAD,UACE,eAACC,EAAD,WACE,cAAC,EAAD,CACEtB,iBAAkB4C,KAAKnB,qBACvB1B,KAAMA,EACND,SAAUA,IAEZ,cAAC,EAAD,CAAQkB,OAAQA,a,GApDRgC,IAAMtD,WClBxBuD,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,W","file":"static/js/main.9add9dce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/iss.b9216540.svg\";","import L from \"leaflet\";\nimport iconFile from \"./iss.svg\";\n\nconst Icon = L.icon({\n  iconUrl: iconFile,\n  iconRetinaUrl: iconFile,\n  iconAnchor: null,\n  shadowUrl: null,\n  shadowSize: null,\n  shadowAnchor: null,\n  iconSize: [50, 50],\n  className: \"iss-icon\",\n});\n\nexport default Icon;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport {\n  MapContainer as LeafletMap,\n  TileLayer,\n  Marker,\n  Popup,\n  Circle,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Icon from \"./icon\";\n\nconst Component = styled.div`\n  width: 100%;\n\n  & > div {\n    width: 100%;\n    height: 400px;\n  }\n`;\n\nconst Map = ({ position, zoom, onViewportChange }) => {\n  return (\n    <Component>\n      <LeafletMap\n        center={position}\n        zoom={zoom}\n        onViewportChange={onViewportChange}\n      >\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"></TileLayer>\n        <Marker position={position} icon={Icon}>\n          <Popup>\n            Latitude: {position.lat} <br /> Longitude: {position.lng}\n          </Popup>\n          <Circle center={position} radius={75000}></Circle>\n        </Marker>\n      </LeafletMap>\n    </Component>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\n\nconst Component = styled.div`\n  margin.top: 2rem;\n`;\n\nconst Header = styled.h1`\n  margin: 2rem 0 2rem 0;\n`;\n\nconst Person = styled.div`\n  border-radius: 0.375rem;\n  background-color: white;\n  padding: 1rem;\n  margin: 1rem 0;\n  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.15);\n`;\n\nconst Name = styled.p`\n  margin: 0;\n  text-align: center;\n`;\n\nconst People = ({ people }) => {\n  return (\n    <Component>\n      <Header>Personas en el espacio</Header>\n      {people.map((person) => {\n        return (\n          <Person key={person.name + person.craft}>\n            <Name>\n              <strong>{person.name}</strong> - {person.craft}\n            </Name>\n          </Person>\n        );\n      })}\n    </Component>\n  );\n};\n\nexport default People;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\n\nimport Map from \"./components/Map/Map\";\nimport axios from \"axios\";\nimport People from \"./components/People/People\";\n\nconst Wrapper = styled.div`\n  background-color: #fafafa;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  min-width: 800px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n`;\n\nclass App extends React.Component {\n  state = { position: { lat: 0, lng: 0 }, zoom: 6, people: [] };\n\n  componentDidMount() {\n    this.getSpaceData();\n    this.intervalId = setInterval(() => {\n      this.getSpaceData();\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  handleViewportChange = (viewport) => {\n    if (viewport.zoom !== this.state.zoom)\n      this.setState({ zoom: viewport.zoom });\n  };\n\n  getSpaceData = async () => {\n    try {\n      const locationURL = \"http://api.open-notify.org/iss-now.json\";\n      const peopleInSpaceURL = \"http://api.open-notify.org/astros.json\";\n\n      const issLocationPromise = axios.get(locationURL);\n      const peopleInSpacePromise = axios.get(peopleInSpaceURL);\n\n      const [issLocation, peopleInSpace] = await Promise.all([\n        issLocationPromise,\n        peopleInSpacePromise,\n      ]);\n\n      const position = {\n        lat: issLocation.data.iss_position.latitude,\n        lng: issLocation.data.iss_position.longitude,\n      };\n\n      this.setState({ position: position, people: peopleInSpace.data.people });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  render() {\n    const { position, zoom, people } = this.state;\n    return (\n      <Wrapper>\n        <Content>\n          <Map\n            onViewportChange={this.handleViewportChange}\n            zoom={zoom}\n            position={position}\n          />\n          <People people={people}></People>\n        </Content>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\n"],"sourceRoot":""}